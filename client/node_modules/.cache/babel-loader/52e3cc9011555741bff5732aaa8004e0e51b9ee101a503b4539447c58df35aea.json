{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\GitHub\\\\CRIEYA_MERN\\\\client\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useJwt } from \"react-jwt\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  const [Login, setLogin] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  let name, value;\n  const handleLoginInputs = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLogin({\n      ...Login,\n      [name]: value\n    });\n    // console.log(user)\n  };\n\n  const CheckLogin = async e => {\n    e.preventDefault();\n    console.log(Login);\n    const res = await fetch(\"http://localhost:5000/sign\", {\n      method: \"POST\",\n      Credentials: \"include\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        Login\n      })\n    });\n    const data = await res.json();\n    if (res.status === 400 || !data) {\n      window.alert(\"Invalid login\");\n      console.log(\"invalid login\");\n    } else {\n      window.alert(\"login succesfull\");\n      console.log(\" login successfull\");\n      // navigate.push(\"/login\")\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"email\",\n        name: \"email\",\n        value: Login.email,\n        onChange: handleLoginInputs,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Inp, {\n        type: \"password\",\n        placeholder: \"password\",\n        name: \"password\",\n        value: Login.password,\n        onChange: handleLoginInputs,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"register\",\n        onClick: CheckLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Login, \"tGDcwmL0M1H7s7MY7c7lxfakuho=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useJwt","Login","setLogin","email","password","name","value","handleLoginInputs","e","target","CheckLogin","preventDefault","console","log","res","fetch","method","Credentials","headers","body","JSON","stringify","data","json","status","window","alert"],"sources":["C:/Users/DELL/Documents/GitHub/CRIEYA_MERN/client/src/pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useJwt } from \"react-jwt\";\r\n\r\nexport const Login = () => {\r\n  const [Login, setLogin] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  let name, value;\r\n\r\n  const handleLoginInputs = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setLogin({ ...Login, [name]: value });\r\n    // console.log(user)\r\n  };\r\n\r\n  const CheckLogin = async (e) => {\r\n    e.preventDefault();\r\n    console.log(Login);\r\n    const res = await fetch(\"http://localhost:5000/sign\", {\r\n      method: \"POST\",\r\n      Credentials: \"include\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        Login,\r\n      }),\r\n    });\r\n\r\n    const data = await res.json();\r\n    if (res.status === 400 || !data) {\r\n      window.alert(\"Invalid login\");\r\n      console.log(\"invalid login\");\r\n    } else {\r\n      window.alert(\"login succesfull\");\r\n      console.log(\" login successfull\");\r\n      // navigate.push(\"/login\")\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"email\"\r\n          name=\"email\"\r\n          value={Login.email}\r\n          onChange={handleLoginInputs}\r\n          required\r\n        />\r\n        <Inp\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          name=\"password\"\r\n          value={Login.password}\r\n          onChange={handleLoginInputs}\r\n          required\r\n        />\r\n        <input type=\"submit\" value=\"register\" onClick={CheckLogin} />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,WAAW;AAAC;AAAA;AAEnC,OAAO,MAAMC,KAAK,GAAG,MAAM;EAAA;EACzB,MAAM,CAACA,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC;IACjCI,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,IAAIC,IAAI,EAAEC,KAAK;EAEf,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEH,IAAI;MAAEC;IAAM,CAAC,GAAGE,CAAC,CAACC,MAAM;IAEhCP,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAE,CAACI,IAAI,GAAGC;IAAM,CAAC,CAAC;IACrC;EACF,CAAC;;EAED,MAAMI,UAAU,GAAG,MAAOF,CAAC,IAAK;IAC9BA,CAAC,CAACG,cAAc,EAAE;IAClBC,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;IAClB,MAAMa,GAAG,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;MACpDC,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBpB;MACF,CAAC;IACH,CAAC,CAAC;IAEF,MAAMqB,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,EAAE;IAC7B,IAAIT,GAAG,CAACU,MAAM,KAAK,GAAG,IAAI,CAACF,IAAI,EAAE;MAC/BG,MAAM,CAACC,KAAK,CAAC,eAAe,CAAC;MAC7Bd,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC9B,CAAC,MAAM;MACLY,MAAM,CAACC,KAAK,CAAC,kBAAkB,CAAC;MAChCd,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjC;IACF;EACF,CAAC;;EACD,oBACE;IAAA,uBACE;MAAA,wBACE;QACE,IAAI,EAAC,OAAO;QACZ,WAAW,EAAC,OAAO;QACnB,IAAI,EAAC,OAAO;QACZ,KAAK,EAAEZ,KAAK,CAACE,KAAM;QACnB,QAAQ,EAAEI,iBAAkB;QAC5B,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACR,eACF,QAAC,GAAG;QACF,IAAI,EAAC,UAAU;QACf,WAAW,EAAC,UAAU;QACtB,IAAI,EAAC,UAAU;QACf,KAAK,EAAEN,KAAK,CAACG,QAAS;QACtB,QAAQ,EAAEG,iBAAkB;QAC5B,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QACR,eACF;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC,UAAU;QAAC,OAAO,EAAEG;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACxD,iBACN;AAEP,CAAC;AAAC,GA9DWT,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}