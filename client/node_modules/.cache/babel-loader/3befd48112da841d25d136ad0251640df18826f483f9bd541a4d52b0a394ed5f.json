{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rajat\\\\Desktop\\\\MERN\\\\client\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useJwt } from \"react-jwt\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  const [Login, setLogin] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  let name, value;\n  const handleLoginInputs = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLogin({\n      ...Login,\n      [name]: value\n    });\n    // console.log(user)\n  };\n\n  const CheckLogin = async e => {\n    e.preventDefault();\n    console.log(Login);\n    const res = await fetch('http://localhost:5000/sign', {\n      method: \"POST\",\n      Credentials: \"include\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        Login\n      })\n    });\n    const data = await res.json();\n    if (res.status === 400 || !data) {\n      window.alert(\"Invalid login\");\n      console.log(\"invalid login\");\n    } else {\n      window.alert(\"login succesfull\");\n      console.log(\" login successfull\");\n      // navigate.push(\"/login\")\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"email\",\n        name: \"email\",\n        value: Login.email,\n        onChange: handleLoginInputs,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        name: \"password\",\n        value: Login.password,\n        onChange: handleLoginInputs,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"register\",\n        onClick: CheckLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Login, \"GALXl+uQxDMsqD/o//X8wASiJ24=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useJwt","Login","setLogin","email","password","name","value","handleLoginInputs","e","target","CheckLogin","preventDefault","console","log","res","fetch","method","Credentials","headers","body","JSON","stringify","data","json","status","window","alert"],"sources":["C:/Users/rajat/Desktop/MERN/client/src/components/Login.js"],"sourcesContent":["import React , {useState} from 'react'\r\nimport { useJwt } from \"react-jwt\";\r\n\r\nexport const Login = () => {\r\n  const [Login , setLogin ]= useState({\r\n     email: \"\" , password: \"\" \r\n\r\n});\r\n\r\nlet name , value;\r\n\r\nconst handleLoginInputs = (e)=>{\r\n    const {name , value} = e.target;\r\n\r\n    setLogin({...Login , [name]:value});\r\n    // console.log(user)\r\n}\r\n\r\n\r\nconst CheckLogin = async (e)=>{\r\n  e.preventDefault();\r\n  console.log(Login);\r\n const res = await fetch('http://localhost:5000/sign',{\r\n\r\n    method:\"POST\",\r\n    Credentials:\"include\",\r\n    headers:{\r\n      \"Content-type\":\"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      Login\r\n    })\r\n\r\n  })\r\n\r\n  const data= await res.json();\r\n  if(res.status === 400 || !data ){\r\n     window.alert(\"Invalid login\");\r\n     console.log(\"invalid login\");\r\n\r\n  }\r\n\r\n  else{\r\n\r\n     window.alert(\"login succesfull\");\r\n     console.log(\" login successfull\");\r\n     // navigate.push(\"/login\")\r\n\r\n  }\r\n\r\n}\r\n  return (\r\n    <>\r\n   \r\n    <form  >\r\n          <input type=\"email\" placeholder='email' name=\"email\"  value={Login.email} onChange={handleLoginInputs} required />\r\n          <input type=\"password\" placeholder='password' name=\"password\" value={Login.password} onChange={handleLoginInputs}  required />\r\n          <input type=\"submit\" value=\"register\" onClick={CheckLogin}/>\r\n\r\n          \r\n\r\n        \r\n          \r\n           \r\n     </form>\r\n          \r\n\r\n   \r\n   \r\n   </>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AACtC,SAASC,MAAM,QAAQ,WAAW;AAAC;AAAA;AAEnC,OAAO,MAAMC,KAAK,GAAG,MAAM;EAAA;EACzB,MAAM,CAACA,KAAK,EAAGC,QAAQ,CAAE,GAAEH,QAAQ,CAAC;IACjCI,KAAK,EAAE,EAAE;IAAGC,QAAQ,EAAE;EAE3B,CAAC,CAAC;EAEF,IAAIC,IAAI,EAAGC,KAAK;EAEhB,MAAMC,iBAAiB,GAAIC,CAAC,IAAG;IAC3B,MAAM;MAACH,IAAI;MAAGC;IAAK,CAAC,GAAGE,CAAC,CAACC,MAAM;IAE/BP,QAAQ,CAAC;MAAC,GAAGD,KAAK;MAAG,CAACI,IAAI,GAAEC;IAAK,CAAC,CAAC;IACnC;EACJ,CAAC;;EAGD,MAAMI,UAAU,GAAG,MAAOF,CAAC,IAAG;IAC5BA,CAAC,CAACG,cAAc,EAAE;IAClBC,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;IACnB,MAAMa,GAAG,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAC;MAElDC,MAAM,EAAC,MAAM;MACbC,WAAW,EAAC,SAAS;MACrBC,OAAO,EAAC;QACN,cAAc,EAAC;MACjB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBpB;MACF,CAAC;IAEH,CAAC,CAAC;IAEF,MAAMqB,IAAI,GAAE,MAAMR,GAAG,CAACS,IAAI,EAAE;IAC5B,IAAGT,GAAG,CAACU,MAAM,KAAK,GAAG,IAAI,CAACF,IAAI,EAAE;MAC7BG,MAAM,CAACC,KAAK,CAAC,eAAe,CAAC;MAC7Bd,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAE/B,CAAC,MAEG;MAEDY,MAAM,CAACC,KAAK,CAAC,kBAAkB,CAAC;MAChCd,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjC;IAEH;EAEF,CAAC;;EACC,oBACE;IAAA,uBAEA;MAAA,wBACM;QAAO,IAAI,EAAC,OAAO;QAAC,WAAW,EAAC,OAAO;QAAC,IAAI,EAAC,OAAO;QAAE,KAAK,EAAEZ,KAAK,CAACE,KAAM;QAAC,QAAQ,EAAEI,iBAAkB;QAAC,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAG,eAClH;QAAO,IAAI,EAAC,UAAU;QAAC,WAAW,EAAC,UAAU;QAAC,IAAI,EAAC,UAAU;QAAC,KAAK,EAAEN,KAAK,CAACG,QAAS;QAAC,QAAQ,EAAEG,iBAAkB;QAAE,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAG,eAC9H;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC,UAAU;QAAC,OAAO,EAAEG;MAAW;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA;EAO1D,iBAKN;AAEN,CAAC;AAAA,GApEYT,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}