{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rajat\\\\Desktop\\\\MERN\\\\client\\\\src\\\\components\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Signup = () => {\n  _s();\n  const history = useNavigate();\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    work: \"\",\n    password: \"\",\n    cpassword: \"\"\n  });\n  let name, value;\n  const handleInputs = e => {\n    console.log(e);\n    name = e.target.name;\n    value = e.target.value;\n    setUser({\n      ...user,\n      [name]: value\n    });\n  };\n  const PostData = e => {\n    //  e.preventDefault();\n\n    const {\n      name,\n      email,\n      phone,\n      work,\n      password,\n      cpassword\n    } = user;\n\n    //  const res = await fetch(\"http://localhost:5000/register\" , {\n    //     method: \"POST\",\n    //     headers:{\n    //         \"Content-Type\" : \"application/json\"\n\n    //     },\n    //     body:JSON.stringify({\n    //         name , email , phone , work , password, cpassword\n\n    //     })\n    //  });\n\n    axios.post(\"http://localhost:5000/register\", name, email, phone, work, password, cpassword).then(res => console.log(res));\n\n    // const res = await axios({\n    //     method: 'post',\n    //     url: 'http://localhost:5000/register',\n    //     data: name , email , phone , work , password , cpassword,\n    //     headers: {\n    //         'Content-Type': 'application/json',\n    //     },\n    // });\n    // const data= await res.json();\n    //  if(data.status === 422 || !data ){\n    //     window.alert(\"Invalid registration\");\n    //     console.log(\"invalid registration\");\n\n    //  }\n\n    //  else{\n\n    //     window.alert(\"registration succesfull\");\n    //     console.log(\" registration successfull\");\n    //     history.push(\"/login\")\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"name\",\n      name: \"name\",\n      value: user.name,\n      onChange: handleInputs,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"email\",\n      name: \"email\",\n      value: user.email,\n      onChange: handleInputs,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"phone\",\n      name: \"phone\",\n      value: user.phone,\n      onChange: handleInputs,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"work\",\n      name: \"work\",\n      value: user.work,\n      onChange: handleInputs,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      name: \"password\",\n      value: user.password,\n      onChange: handleInputs,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"cpassword\",\n      name: \"cpassword\",\n      value: user.cpassword,\n      onChange: handleInputs,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"register\",\n      onClick: {\n        PostData\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n_s(Signup, \"Tiwt+lwAQW/0O72aAjToPSXyzUo=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","NavLink","useNavigate","axios","Signup","history","user","setUser","name","email","phone","work","password","cpassword","value","handleInputs","e","console","log","target","PostData","post","then","res"],"sources":["C:/Users/rajat/Desktop/MERN/client/src/components/Signup.js"],"sourcesContent":["import React , {useState} from 'react'\r\nimport { NavLink , useNavigate  } from 'react-router-dom';\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nexport const Signup = () => {\r\n    const history = useNavigate();\r\n    const [user , setUser ]= useState({\r\n        name: \"\" , email: \"\" , phone: \"\" , work: \"\" , password: \"\" , cpassword: \"\"\r\n\r\n    });\r\n\r\n\r\n    let name , value;\r\n\r\n    const handleInputs = e=>{\r\n        console.log(e);\r\n        name = e.target.name;\r\n        value= e.target.value;\r\n\r\n        setUser({...user , [name]:value});\r\n    }\r\n\r\n    const PostData = (e)=>{\r\n    //  e.preventDefault();\r\n\r\n     const { name , email , phone , work , password, cpassword} = user;\r\n\r\n    //  const res = await fetch(\"http://localhost:5000/register\" , {\r\n    //     method: \"POST\",\r\n    //     headers:{\r\n    //         \"Content-Type\" : \"application/json\"\r\n\r\n    //     },\r\n    //     body:JSON.stringify({\r\n    //         name , email , phone , work , password, cpassword\r\n\r\n    //     })\r\n    //  });\r\n\r\n    axios.post(\"http://localhost:5000/register\" , name , email , phone , work , password, cpassword)\r\n    .then(res => console.log(res))\r\n\r\n\r\n    // const res = await axios({\r\n    //     method: 'post',\r\n    //     url: 'http://localhost:5000/register',\r\n    //     data: name , email , phone , work , password , cpassword,\r\n    //     headers: {\r\n    //         'Content-Type': 'application/json',\r\n    //     },\r\n    // });\r\n    // const data= await res.json();\r\n    //  if(data.status === 422 || !data ){\r\n    //     window.alert(\"Invalid registration\");\r\n    //     console.log(\"invalid registration\");\r\n\r\n    //  }\r\n\r\n    //  else{\r\n\r\n    //     window.alert(\"registration succesfull\");\r\n    //     console.log(\" registration successfull\");\r\n    //     history.push(\"/login\")\r\n\r\n     }\r\n\r\n\r\n    \r\n\r\n\r\n  return (\r\n    <>\r\n     \r\n          \r\n          <input type=\"text\" placeholder='name' name=\"name\"  value={user.name} onChange={handleInputs} required />\r\n          <input type=\"email\" placeholder='email' name=\"email\"  value={user.email} onChange={handleInputs} required />\r\n          <input type=\"number\" placeholder='phone' name=\"phone\"  value={user.phone} onChange={handleInputs} required />\r\n          <input type=\"text\" placeholder='work' name=\"work\"  value={user.work} onChange={handleInputs} required />\r\n          <input type=\"password\" placeholder='password' name=\"password\" value={user.password} onChange={handleInputs}  required />\r\n          <input type=\"password\" placeholder='cpassword' name=\"cpassword\"  value={user.cpassword} onChange={handleInputs} required />\r\n          <input type=\"submit\" value=\"register\" \r\n          onClick={{PostData}}\r\n           />\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    \r\n    \r\n    </>\r\n  )\r\n\r\n  }\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}